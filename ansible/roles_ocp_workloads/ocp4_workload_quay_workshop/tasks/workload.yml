---
- name: Get router sub domain
  shell: oc get route -n openshift-console --output=json | grep -m 1 routerCanonicalHostname | awk '{ print $2 }' | sed -r 's/[\",]//g'
  register: CLUSTER_SUBDOMAIN_RETURN

- name: Store the cluster hostname
  set_fact:
    CLUSTER_HOSTNAME: "{{ CLUSTER_SUBDOMAIN_RETURN.stdout | regex_replace('apps','') }}"

- name: Store the subdomain
  set_fact:
    CLUSTER_SUBDOMAIN: "{{ CLUSTER_SUBDOMAIN_RETURN.stdout }}"

- name: Create the homeroom project
  shell: oc new-project homeroom
  ignore_errors: true

- name: Deploy the homeroom spawner
  shell: |
    oc process -f \
    https://raw.githubusercontent.com/afouladi7/quay-workshop/master/templates/hosted-workshop-production.json \
    -p SPAWNER_NAMESPACE=homeroom \
    -p CLUSTER_SUBDOMAIN="{{ CLUSTER_SUBDOMAIN }}" \
    -p WORKSHOP_NAME=service-mesh-workshop \
    -p CONSOLE_IMAGE=quay.io/openshift/origin-console:4.7 \
    -p WORKSHOP_IMAGE=quay.io/redhatgov/quay-workshop:latest \
    -p CUSTOM_TAB_1=Quay=https://quay.{{ CLUSTER_SUBDOMAIN }} | oc apply -n homeroom -f -


- name: Create the quay ns and install the operator
  shell: |
    oc apply -f https://raw.githubusercontent.com/afouladi7/quay-workshop/master/templates/quay.yml
  ignore_errors: true

- name: Make user1 a project admin of quay
  shell: |
    oc adm policy add-role-to-user admin user1 -n quay

# Login as user1 to activate this account
- name: Login as user1
  shell: "oc login -u user1 -p openshift --server=https://api{{ CLUSTER_HOSTNAME }}:6443"


###TODOs
# Login as user1
# deploy the quay operator
# create quay project and make user1 project admin
# change WORKSHOP_IMAGE to quay workshop image
# Make user1 a project admin of quay
## End Homeroom


# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool